#vim
instalar la ultima version de vim (checkeado):
sudo apt install vim-gtk

Optativo (no funciono):

(Fuente: https://www.vim.org/git.php)
.- Instala GCC y otras cosas:
sudo apt install build-essential
.- Instalar los manuales 
sudo apt-get install manpages-dev

git clone https://github.com/vim/vim.git
cd vim/src
./configure --enable-python3interp
make
sudo make install


# nvim
configuracion, tutoriales y demas

Instalacion:
fuente: https://github.com/neovim/neovim/wiki/Installing-Neovim
hacer:
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
chmod u+x nvim.appimage
./nvim.appimage --appimage-extract
./squashfs-root/AppRun --version

luego copiar la carpeta "squashfs-root" en algun lugar del home (o donde quieras) y hacer un simbolic link a:
ln -s {path-to-folder}/squashfs-root/AppRun /usr/bin/nvim

Explicacion de Nico: https://www.udemy.com/course/vim-aumenta-tu-velocidad-de-desarrollo/learn/lecture/15610326#overview
Para usar el mismo archivo de configuracion de vim en nvim, crear una carpeta dentro de .config y poner un archivo dentro de ella:
mkdir ~/.config/nvim
touch  ~/.config/nvim/init.vim
pegar lo siguiente dentro de init.vim:

set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &packpath=&runtimepath
source ~/.vimrc

descargar el archivo .vimrc de este repo y ponerlo en una carpeta dentro de config:

cd  ~/.config/nvim
wget https://raw.githubusercontent.com/Seba-san/nvim/main/.vimrc

luego crear 2 enlaces simbolicos:
ln -s ~/.config/nvim/.vimrc ~/
ln -s ~/.config/nvim/.vimrc ~/.config/.vimrc

Luego instalar un manejador de plugins. En este caso se usara "plug vim":

https://github.com/junegunn/vim-plug 

Instrucciones de instalacion:
Para vim:
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
Para neovim:
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
       

Luego entrar a algun archivo de texto con vim, poner:
:Plug (apretar tab) y debe aparecer una lista para seleccionar opciones. Poner "Plugininstall"
esperar a que se instale todo, salir poniendo :q. 

Volver a entrar y probar la tecla de acceso rapido " q". Si sale de la pantalla, todo anda bien (ademas de que tiene que cambiar los colores y eso.)

### Posibles errores con python

solucion:
pip install neovim

### Instalacion del editor de xml
fuente: https://github.com/othree/xml.vim
En la carpeta ~/.vim/ pegar la carpeta ftplugin de este repositorio. (estaria bueno hacer un .sh para instalarlo directamente no?)
En esta carpeta se ponen las extenciones de los archivos .vim.  Entonces mantenes el .vimrc mas limpio y si queres editar el comportamiento para un determinado tipo de archivo, te  vas al py.vim o xml.vim o cosas asi. Mas info en: https://vim.fandom.com/wiki/File_type_plugins

Instrucciones para editar achivos XML:
	This script provides some convenience when editing XML (and some SGML including HTML) formated documents. It allows you to jump to the beginning or end of the tag block your cursor is in. % will jump between < and > within the tag your cursor is in. When in insert mode and you finish a tag (pressing >) the tag will be completed. If you press > twice it will complete the tag and place the cursor in the middle of the tags on it's own line.

	Fuente: https://github.com/sukima/xmledit/

Para ver mas instrucciones teclear: :help xml-plugin
Con el comando ",f" se foldean las lineas.
Se cambi√≥ el comando para comentar, es ",r".
Para seleccionar toda la seccion escribir "vat"
Para comentar toda la seccion (modo normal), poner ",="
Para descomentar, hay que ir hasta el cierre del comentario y precionar ",]"... pero parece que no lo deja como antes... 

Ojo con los Virtualenv: No son compatibles con vim. Hay que usar el venv generico de python, fuente: https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-environment
